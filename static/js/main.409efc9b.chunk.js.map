{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","cardsArray","map","user","i","SearchBox","searchfield","searchHandle","type","placeholder","onChange","Scroll","style","overflow","border","height","children","App","onSearchHandle","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbF,SAACC,GAAU,IACbC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,MAAOC,EAAIH,EAAJG,GACpB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EAnBC,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAERC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACjC,OACI,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOjB,OACI,8BACIH,KCDGI,EAdE,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKX,UAAU,MAAf,SACI,uBACIA,UAAU,qDACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,EARA,SAACnB,GACZ,OACI,qBAAKoB,MAAO,CAACC,SAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACKvB,EAAMwB,YCiDJC,G,wDA3CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GAClB,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAbtC,EAAKC,MAAQ,CACTvB,OAAQ,GACRM,YAAa,IAJP,E,gEAQM,IAAD,OACfkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAQ,EAAKR,SAAS,CAACpB,OAAQ4B,S,+BAO/B,IAAD,EAEyBC,KAAKN,MAA5BvB,EAFF,EAEEA,OAAQM,EAFV,EAEUA,YACTwB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS5B,EAAY2B,kBAGzD,OAAIjC,EAAOmC,OAIH,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,cAAd,yBACA,cAAC,EAAD,CAAWW,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ8B,SAPvB,oBAAIlC,UAAU,KAAd,yB,GA3BDwC,cCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.409efc9b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) =>{\r\n    const {name, email, id}=props;\r\n    return (\r\n        <div className=\"tc bg-washed-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Card","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList =({robots}) =>{\r\n\r\n    const cardsArray = robots.map((user, i)=>{\r\n        return (\r\n            <Card \r\n                key={i} \r\n                id={robots[i].id}\r\n                name={robots[i].name} \r\n                email={robots[i].email}\r\n            />\r\n        );\r\n    })\r\n    return (\r\n        <div>\r\n           {cardsArray} \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst SearchBox =({searchfield, searchHandle}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input \r\n                className=\"ba bw2 br2 b--light-silver pa2 bg-washed-yellow f4\" \r\n                type=\"search\" \r\n                placeholder=\"search robots\" \r\n                onChange={searchHandle} \r\n            />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow: 'scroll', border:'1px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import React, { Component } from 'react'\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\n// import {robots} from './robots'\r\nimport './App.css'\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }   \r\n    }\r\n    \r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users=>{this.setState({robots: users})});\r\n    }\r\n\r\n    onSearchHandle = (event) => {\r\n    this.setState({ searchfield: event.target.value})\r\n    }\r\n\r\n    render (){\r\n\r\n        const {robots, searchfield} = this.state\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n\r\n        if(!robots.length){\r\n            return <h1 className=\"tc\">Loading</h1>\r\n        }else{\r\n            return(\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f2 lh-title\">RoboFriends</h1>\r\n                    <SearchBox searchHandle={this.onSearchHandle}/>\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </Scroll>\r\n                    \r\n                </div>\r\n                \r\n            );\r\n        }\r\n    }    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}